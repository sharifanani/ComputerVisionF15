% close all
% clear all
% clc
%
% I = imread('cameraman.tif');
function [rows,cols] = detectCorners(I)

%make sure image is greyscale
if(numel(size(I)) >2)
    I=rgb2gray(I);
end

I=histeq(I); %%histeq the image
I = double(I); %change to double

%-------First Derivative
G= fspecial('gaussian',6,1);
[Gx,Gy] = gradient(G);
Ix = conv2(I,Gx,'same'); Iy = conv2(I,Gy,'same');
Ix2 = Ix.*Ix; Iy2 = Iy.*Iy; Ixy = Ix.*Iy;

%----Calculate second derivatives-------%
Gw = fspecial('gaussian',36,1);
Sx2 = conv2(Ix2,Gw,'same'); Sy2 = conv2(Iy2,Gw,'same');
Sxy = conv2(Ixy,Gw,'same');
%---------------------------------------%
H = cell(size(Ix2));
R = zeros(size(Ix2));

k=0.4;
for i = 1:size(Sx2,1)
    for j = 1:size(Sx2,2)
        H{i,j} = [Sx2(i,j) Sxy(i,j);
            Sxy(i,j) Sy2(i,j)];
        R(i,j) = det(H{i,j}) / k*(trace(H{i,j}));
    end
end




J = abs(R(:));


t = 0.05*max(J);
for i = 1:numel(J)
    if J(i)> t
        J(i) = 1;
    else
        J(i) = 0;
    end
end


J2 = reshape(J,size(R));
[cols,rows]=find(J2 == 1);
for i = 1:numel(rows)-1
    for j = i+1:numel(cols)
        if(J2(cols(j),rows(j))==1 && J2(cols(i),rows(i))==1)
            dist = (rows(i) - rows (j))^2 + (cols(i)-cols(j))^2;
            if(dist< 100 && R(cols(j),rows(j)) < R(cols(i),rows(i)))
                J2(cols(j),rows(j))=0;
            elseif(dist < 100)
                J2(cols(i),rows(i))=0;
            end
        end
    end
end
[rows,cols]=find(J2 == 1);
end